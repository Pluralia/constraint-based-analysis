module Example.Simple where

import Types

-----------------------------------------------------------------------------------------------------

idx = (L "x" $ V "x")
idy = (L "y" $ V "y")
idz = (L "z" $ V "z")

-----------------------------------------------------------------------------------------------------

twoIdApp = idx :@: idy

seqApp = idx :@: ((L "a" $ L "b" $ V "a" :@: V "b") :@: idy :@: idz) :@: V "c"

oneVarTwoLam = (L "f" $ L "g" $ L "h" $ (V "f" :@: V "g") :@: (V "f" :@: V "h"))
                 :@: (L "x" $ V "x" :@: V "a") :@: idy :@: idz

contextDep = (L "f" $ (V "f" :@: V "f") :@: idy) :@: idx

unusedNotNfArg = (L "a" idy) :@: (idz :@: idx)

-----------------------------------------------------------------------------------------------------

y_comb = L "f" $ y :@: y
  where
    y = L "x" $ V "f" :@: (V "x" :@: V "x")
